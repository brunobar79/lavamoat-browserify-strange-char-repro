[32mlavamoat-tofu:test: [0mcache hit, replaying output [2m39d05d88cef56132[0m
[32mlavamoat-tofu:test: [0myarn run v1.22.17
[32mlavamoat-tofu:test: [0m$ ava --timeout=30s test/index.js
[32mlavamoat-tofu:test: [0m
[32mlavamoat-tofu:test: [0m  âœ” object method (176ms)
[32mlavamoat-tofu:test: [0m  âœ” arguments keyword (158ms)
[32mlavamoat-tofu:test: [0m  âœ” arguments keyword 2 (155ms)
[32mlavamoat-tofu:test: [0m  âœ” arguments keyword 3 (153ms)
[32mlavamoat-tofu:test: [0m  âœ” arguments keyword 4 (151ms)
[32mlavamoat-tofu:test: [0m  âœ” arguments keyword 5 (150ms)
[32mlavamoat-tofu:test: [0m  âœ” argument.js - parameters from inline arguments (149ms)
[32mlavamoat-tofu:test: [0m  âœ” arrow_functions.js - arguments of arrow functions are not globals (145ms)
[32mlavamoat-tofu:test: [0m  âœ” assign_implicit.js - assign from an implicit global (141ms)
[32mlavamoat-tofu:test: [0m  âœ” catch-pattern.js - pattern in catch (140ms)
[32mlavamoat-tofu:test: [0m  âœ” class.js - ES2015 classes (138ms)
[32mlavamoat-tofu:test: [0m  âœ” class-expression.js - class as expression (130ms)
[32mlavamoat-tofu:test: [0m  âœ” default-argument.js - ES2015 default argument (128ms)
[32mlavamoat-tofu:test: [0m  âœ” destructuring-rest.js - ES2015 destructuring rest (126ms)
[32mlavamoat-tofu:test: [0m  âœ” destructuring.js - ES2015 variable destructuring (123ms)
[32mlavamoat-tofu:test: [0m  âœ” detect.js - check locals and globals (120ms)
[32mlavamoat-tofu:test: [0m  âœ” labels.js - labels for while loops are not globals (112ms)
[32mlavamoat-tofu:test: [0m  âœ” named_arg.js - named argument / parameter (110ms)
[32mlavamoat-tofu:test: [0m  âœ” names-in-object-prototype.js - check names in object prototype (108ms)
[32mlavamoat-tofu:test: [0m  âœ” obj.js - globals on the right-hand of a colon in an object literal (106ms)
[32mlavamoat-tofu:test: [0m  âœ” reserved-words.js - check we do not force into strict mode (105ms)
[32mlavamoat-tofu:test: [0m  âœ” rest-argument.js - ES2015 rest argument (104ms)
[32mlavamoat-tofu:test: [0m  âœ” return_hash.js - named argument / parameter (102ms)
[32mlavamoat-tofu:test: [0m  âœ” right_hand.js - globals on the right-hand of assignment (102ms)
[32mlavamoat-tofu:test: [0m  âœ” try_catch.js - the exception in a try catch block is a local (101ms)
[32mlavamoat-tofu:test: [0m  âœ” BigInt - sees global property primordials like BigInt
[32mlavamoat-tofu:test: [0m  âœ” fnToCodeBlock utility works
[32mlavamoat-tofu:test: [0m  âœ” detects global reads
[32mlavamoat-tofu:test: [0m  âœ” doesnt detect "this"
[32mlavamoat-tofu:test: [0m  âœ” doesnt detect properties on "this"
[32mlavamoat-tofu:test: [0m  âœ” detects reads on globalRefs
[32mlavamoat-tofu:test: [0m  âœ” detects reads on multiple globalRefs
[32mlavamoat-tofu:test: [0m  âœ” detects implicit global writes
[32mlavamoat-tofu:test: [0m  âœ” detects implicit global writes with mixed usage
[32mlavamoat-tofu:test: [0m  âœ” detects assignment to property on globalRefs
[32mlavamoat-tofu:test: [0m  âœ” never suggest access to full globalRef
[32mlavamoat-tofu:test: [0m  âœ” detects combined globalRef assignment and reads
[32mlavamoat-tofu:test: [0m  âœ” not picking up assignments to non-global matching globalRef name
[32mlavamoat-tofu:test: [0m  âœ” elevating computed property lookups to globalRef 1
[32mlavamoat-tofu:test: [0m  âœ” elevating computed property lookups to globalRef 2
[32mlavamoat-tofu:test: [0m  âœ” picking up mixed explicit and computed property lookups
[32mlavamoat-tofu:test: [0m  âœ” not picking up js language features
[32mlavamoat-tofu:test: [0m  âœ” ignore globalRef without property lookup
[32mlavamoat-tofu:test: [0m  âœ” get granular platform api
[32mlavamoat-tofu:test: [0m  âœ” get granular platform api when nested under global
[32mlavamoat-tofu:test: [0m  âœ” take platform api, up to computed
[32mlavamoat-tofu:test: [0m  âœ” raise globals to highest used
[32mlavamoat-tofu:test: [0m  âœ” correctly finds deep "process.env" reference
[32mlavamoat-tofu:test: [0m  âœ” read access to object implies write access to properties
[32mlavamoat-tofu:test: [0m  âœ” object destructuring
[32mlavamoat-tofu:test: [0m  âœ” object destructuring with branching
[32mlavamoat-tofu:test: [0m  âœ” array destructuring
[32mlavamoat-tofu:test: [0m  âœ” complex mixed destructuring
[32mlavamoat-tofu:test: [0m  âœ” paths stop at computed props
[32mlavamoat-tofu:test: [0m  âœ” new intrinsics like BigInt are ignored
[32mlavamoat-tofu:test: [0m  âœ” cjs - basic
[32mlavamoat-tofu:test: [0m  âœ” cjs - shadowed require
[32mlavamoat-tofu:test: [0m  âœ” cjs - include even if require result not stored in variable
[32mlavamoat-tofu:test: [0m  âœ” cjs - include even if declared var is unused
[32mlavamoat-tofu:test: [0m  âœ” cjs - basic destructure
[32mlavamoat-tofu:test: [0m  âœ” cjs - basic member
[32mlavamoat-tofu:test: [0m  âœ” cjs - mixed destructuring and member
[32mlavamoat-tofu:test: [0m  âœ” cjs - usage basic
[32mlavamoat-tofu:test: [0m  âœ” cjs - usage advanced
[32mlavamoat-tofu:test: [0m  âœ” esm - basic
[32mlavamoat-tofu:test: [0m  âœ” esm - full set
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - basic
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - assignment to toString on prototype
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - assignment to toString
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - assignment to frozen primordial
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - primordial potential false positive - instrinsic
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - primordial potential false positive - keyword
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - primordial modify property
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - primordial Error modify property
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - ensure shadowed references not counted - simple
[32mlavamoat-tofu:test: [0m  âœ” inspectPrimordialAssignments - ensure shadowed references not counted - complex
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - allowed primordial assignment
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - disallowed primordial assignment
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - strict mode - reserved word
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - strict mode - deleting a variable
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - strict mode - octal literals
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - strict mode - escaped octal literals
[32mlavamoat-tofu:test: [0m  âœ” inspectSesCompat - strict mode - "with" keyword
[32mlavamoat-tofu:test: [0m  âœ” upgrades reads to writes
[32mlavamoat-tofu:test: [0m  âœ” adds new packages
[32mlavamoat-tofu:test: [0m  âœ” dedupe overlapping
[32mlavamoat-tofu:test: [0m  âœ” non-overlapping
[32mlavamoat-tofu:test: [0m  â”€
[32mlavamoat-tofu:test: [0m
[32mlavamoat-tofu:test: [0m  87 tests passed
[32mlavamoat-tofu:test: [0mDone in 1.60s.
